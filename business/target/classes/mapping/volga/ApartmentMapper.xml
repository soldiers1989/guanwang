<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.web.business.dao.volga.ApartmentMapper" >
  <resultMap id="BaseResultMap" type="com.web.business.model.volga.Apartment" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
    <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
    <result column="deleted_at" property="deletedAt" jdbcType="TIMESTAMP" />
    <result column="created_by" property="createdBy" jdbcType="INTEGER" />
    <result column="updated_by" property="updatedBy" jdbcType="INTEGER" />
    <result column="deleted_by" property="deletedBy" jdbcType="INTEGER" />
    <result column="version" property="version" jdbcType="INTEGER" />
    <result column="is_delete" property="isDelete" jdbcType="BIT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="city" property="city" jdbcType="VARCHAR" />
    <result column="district" property="district" jdbcType="VARCHAR" />
    <result column="block" property="block" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="is_new" property="isNew" jdbcType="BIT" />
    <result column="is_decorating" property="isDecorating" jdbcType="BIT" />
    <result column="decorating_start_at" property="decoratingStartAt" jdbcType="DATE" />
    <result column="decorating_end_at" property="decoratingEndAt" jdbcType="DATE" />
    <result column="floor_num" property="floorNum" jdbcType="SMALLINT" />
    <result column="floor_room_num" property="floorRoomNum" jdbcType="SMALLINT" />
    <result column="room_num" property="roomNum" jdbcType="SMALLINT" />
    <result column="operator_id" property="operatorId" jdbcType="INTEGER" />
    <result column="area" property="area" jdbcType="VARCHAR" />
    <result column="latitude" property="latitude" jdbcType="VARCHAR" />
    <result column="longitude" property="longitude" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.web.business.model.volga.Apartment" extends="BaseResultMap" >
    <result column="remark" property="remark" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, created_at, updated_at, deleted_at, created_by, updated_by, deleted_by, version, 
    is_delete, name, city, district, block, address, is_new, is_decorating, decorating_start_at, 
    decorating_end_at, floor_num, floor_room_num, room_num, operator_id, area, latitude, 
    longitude
  </sql>
  <sql id="Blob_Column_List" >
    remark
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.web.business.model.volga.ApartmentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from apartment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.web.business.model.volga.ApartmentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from apartment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart >= 0" >
      limit ${limitStart} , ${pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from apartment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from apartment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.web.business.model.volga.ApartmentExample" >
    delete from apartment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.web.business.model.volga.Apartment" >
    insert into apartment (id, created_at, updated_at, 
      deleted_at, created_by, updated_by, 
      deleted_by, version, is_delete, 
      name, city, district, 
      block, address, is_new, 
      is_decorating, decorating_start_at, decorating_end_at, 
      floor_num, floor_room_num, room_num, 
      operator_id, area, latitude, 
      longitude, remark)
    values (#{id,jdbcType=INTEGER}, #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}, 
      #{deletedAt,jdbcType=TIMESTAMP}, #{createdBy,jdbcType=INTEGER}, #{updatedBy,jdbcType=INTEGER}, 
      #{deletedBy,jdbcType=INTEGER}, #{version,jdbcType=INTEGER}, #{isDelete,jdbcType=BIT}, 
      #{name,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, #{district,jdbcType=VARCHAR}, 
      #{block,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{isNew,jdbcType=BIT}, 
      #{isDecorating,jdbcType=BIT}, #{decoratingStartAt,jdbcType=DATE}, #{decoratingEndAt,jdbcType=DATE}, 
      #{floorNum,jdbcType=SMALLINT}, #{floorRoomNum,jdbcType=SMALLINT}, #{roomNum,jdbcType=SMALLINT}, 
      #{operatorId,jdbcType=INTEGER}, #{area,jdbcType=VARCHAR}, #{latitude,jdbcType=VARCHAR}, 
      #{longitude,jdbcType=VARCHAR}, #{remark,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.web.business.model.volga.Apartment" >
    insert into apartment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="createdAt != null" >
        created_at,
      </if>
      <if test="updatedAt != null" >
        updated_at,
      </if>
      <if test="deletedAt != null" >
        deleted_at,
      </if>
      <if test="createdBy != null" >
        created_by,
      </if>
      <if test="updatedBy != null" >
        updated_by,
      </if>
      <if test="deletedBy != null" >
        deleted_by,
      </if>
      <if test="version != null" >
        version,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="city != null" >
        city,
      </if>
      <if test="district != null" >
        district,
      </if>
      <if test="block != null" >
        block,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="isNew != null" >
        is_new,
      </if>
      <if test="isDecorating != null" >
        is_decorating,
      </if>
      <if test="decoratingStartAt != null" >
        decorating_start_at,
      </if>
      <if test="decoratingEndAt != null" >
        decorating_end_at,
      </if>
      <if test="floorNum != null" >
        floor_num,
      </if>
      <if test="floorRoomNum != null" >
        floor_room_num,
      </if>
      <if test="roomNum != null" >
        room_num,
      </if>
      <if test="operatorId != null" >
        operator_id,
      </if>
      <if test="area != null" >
        area,
      </if>
      <if test="latitude != null" >
        latitude,
      </if>
      <if test="longitude != null" >
        longitude,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null" >
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="deletedAt != null" >
        #{deletedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null" >
        #{createdBy,jdbcType=INTEGER},
      </if>
      <if test="updatedBy != null" >
        #{updatedBy,jdbcType=INTEGER},
      </if>
      <if test="deletedBy != null" >
        #{deletedBy,jdbcType=INTEGER},
      </if>
      <if test="version != null" >
        #{version,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=BIT},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="district != null" >
        #{district,jdbcType=VARCHAR},
      </if>
      <if test="block != null" >
        #{block,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="isNew != null" >
        #{isNew,jdbcType=BIT},
      </if>
      <if test="isDecorating != null" >
        #{isDecorating,jdbcType=BIT},
      </if>
      <if test="decoratingStartAt != null" >
        #{decoratingStartAt,jdbcType=DATE},
      </if>
      <if test="decoratingEndAt != null" >
        #{decoratingEndAt,jdbcType=DATE},
      </if>
      <if test="floorNum != null" >
        #{floorNum,jdbcType=SMALLINT},
      </if>
      <if test="floorRoomNum != null" >
        #{floorRoomNum,jdbcType=SMALLINT},
      </if>
      <if test="roomNum != null" >
        #{roomNum,jdbcType=SMALLINT},
      </if>
      <if test="operatorId != null" >
        #{operatorId,jdbcType=INTEGER},
      </if>
      <if test="area != null" >
        #{area,jdbcType=VARCHAR},
      </if>
      <if test="latitude != null" >
        #{latitude,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null" >
        #{longitude,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.web.business.model.volga.ApartmentExample" resultType="java.lang.Integer" >
    select count(*) from apartment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update apartment
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.createdAt != null" >
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedAt != null" >
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deletedAt != null" >
        deleted_at = #{record.deletedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdBy != null" >
        created_by = #{record.createdBy,jdbcType=INTEGER},
      </if>
      <if test="record.updatedBy != null" >
        updated_by = #{record.updatedBy,jdbcType=INTEGER},
      </if>
      <if test="record.deletedBy != null" >
        deleted_by = #{record.deletedBy,jdbcType=INTEGER},
      </if>
      <if test="record.version != null" >
        version = #{record.version,jdbcType=INTEGER},
      </if>
      <if test="record.isDelete != null" >
        is_delete = #{record.isDelete,jdbcType=BIT},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.city != null" >
        city = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.district != null" >
        district = #{record.district,jdbcType=VARCHAR},
      </if>
      <if test="record.block != null" >
        block = #{record.block,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.isNew != null" >
        is_new = #{record.isNew,jdbcType=BIT},
      </if>
      <if test="record.isDecorating != null" >
        is_decorating = #{record.isDecorating,jdbcType=BIT},
      </if>
      <if test="record.decoratingStartAt != null" >
        decorating_start_at = #{record.decoratingStartAt,jdbcType=DATE},
      </if>
      <if test="record.decoratingEndAt != null" >
        decorating_end_at = #{record.decoratingEndAt,jdbcType=DATE},
      </if>
      <if test="record.floorNum != null" >
        floor_num = #{record.floorNum,jdbcType=SMALLINT},
      </if>
      <if test="record.floorRoomNum != null" >
        floor_room_num = #{record.floorRoomNum,jdbcType=SMALLINT},
      </if>
      <if test="record.roomNum != null" >
        room_num = #{record.roomNum,jdbcType=SMALLINT},
      </if>
      <if test="record.operatorId != null" >
        operator_id = #{record.operatorId,jdbcType=INTEGER},
      </if>
      <if test="record.area != null" >
        area = #{record.area,jdbcType=VARCHAR},
      </if>
      <if test="record.latitude != null" >
        latitude = #{record.latitude,jdbcType=VARCHAR},
      </if>
      <if test="record.longitude != null" >
        longitude = #{record.longitude,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update apartment
    set id = #{record.id,jdbcType=INTEGER},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      deleted_at = #{record.deletedAt,jdbcType=TIMESTAMP},
      created_by = #{record.createdBy,jdbcType=INTEGER},
      updated_by = #{record.updatedBy,jdbcType=INTEGER},
      deleted_by = #{record.deletedBy,jdbcType=INTEGER},
      version = #{record.version,jdbcType=INTEGER},
      is_delete = #{record.isDelete,jdbcType=BIT},
      name = #{record.name,jdbcType=VARCHAR},
      city = #{record.city,jdbcType=VARCHAR},
      district = #{record.district,jdbcType=VARCHAR},
      block = #{record.block,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      is_new = #{record.isNew,jdbcType=BIT},
      is_decorating = #{record.isDecorating,jdbcType=BIT},
      decorating_start_at = #{record.decoratingStartAt,jdbcType=DATE},
      decorating_end_at = #{record.decoratingEndAt,jdbcType=DATE},
      floor_num = #{record.floorNum,jdbcType=SMALLINT},
      floor_room_num = #{record.floorRoomNum,jdbcType=SMALLINT},
      room_num = #{record.roomNum,jdbcType=SMALLINT},
      operator_id = #{record.operatorId,jdbcType=INTEGER},
      area = #{record.area,jdbcType=VARCHAR},
      latitude = #{record.latitude,jdbcType=VARCHAR},
      longitude = #{record.longitude,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update apartment
    set id = #{record.id,jdbcType=INTEGER},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      deleted_at = #{record.deletedAt,jdbcType=TIMESTAMP},
      created_by = #{record.createdBy,jdbcType=INTEGER},
      updated_by = #{record.updatedBy,jdbcType=INTEGER},
      deleted_by = #{record.deletedBy,jdbcType=INTEGER},
      version = #{record.version,jdbcType=INTEGER},
      is_delete = #{record.isDelete,jdbcType=BIT},
      name = #{record.name,jdbcType=VARCHAR},
      city = #{record.city,jdbcType=VARCHAR},
      district = #{record.district,jdbcType=VARCHAR},
      block = #{record.block,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      is_new = #{record.isNew,jdbcType=BIT},
      is_decorating = #{record.isDecorating,jdbcType=BIT},
      decorating_start_at = #{record.decoratingStartAt,jdbcType=DATE},
      decorating_end_at = #{record.decoratingEndAt,jdbcType=DATE},
      floor_num = #{record.floorNum,jdbcType=SMALLINT},
      floor_room_num = #{record.floorRoomNum,jdbcType=SMALLINT},
      room_num = #{record.roomNum,jdbcType=SMALLINT},
      operator_id = #{record.operatorId,jdbcType=INTEGER},
      area = #{record.area,jdbcType=VARCHAR},
      latitude = #{record.latitude,jdbcType=VARCHAR},
      longitude = #{record.longitude,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.web.business.model.volga.Apartment" >
    update apartment
    <set >
      <if test="createdAt != null" >
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="deletedAt != null" >
        deleted_at = #{deletedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null" >
        created_by = #{createdBy,jdbcType=INTEGER},
      </if>
      <if test="updatedBy != null" >
        updated_by = #{updatedBy,jdbcType=INTEGER},
      </if>
      <if test="deletedBy != null" >
        deleted_by = #{deletedBy,jdbcType=INTEGER},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=BIT},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="district != null" >
        district = #{district,jdbcType=VARCHAR},
      </if>
      <if test="block != null" >
        block = #{block,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="isNew != null" >
        is_new = #{isNew,jdbcType=BIT},
      </if>
      <if test="isDecorating != null" >
        is_decorating = #{isDecorating,jdbcType=BIT},
      </if>
      <if test="decoratingStartAt != null" >
        decorating_start_at = #{decoratingStartAt,jdbcType=DATE},
      </if>
      <if test="decoratingEndAt != null" >
        decorating_end_at = #{decoratingEndAt,jdbcType=DATE},
      </if>
      <if test="floorNum != null" >
        floor_num = #{floorNum,jdbcType=SMALLINT},
      </if>
      <if test="floorRoomNum != null" >
        floor_room_num = #{floorRoomNum,jdbcType=SMALLINT},
      </if>
      <if test="roomNum != null" >
        room_num = #{roomNum,jdbcType=SMALLINT},
      </if>
      <if test="operatorId != null" >
        operator_id = #{operatorId,jdbcType=INTEGER},
      </if>
      <if test="area != null" >
        area = #{area,jdbcType=VARCHAR},
      </if>
      <if test="latitude != null" >
        latitude = #{latitude,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null" >
        longitude = #{longitude,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.web.business.model.volga.Apartment" >
    update apartment
    set created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      deleted_at = #{deletedAt,jdbcType=TIMESTAMP},
      created_by = #{createdBy,jdbcType=INTEGER},
      updated_by = #{updatedBy,jdbcType=INTEGER},
      deleted_by = #{deletedBy,jdbcType=INTEGER},
      version = #{version,jdbcType=INTEGER},
      is_delete = #{isDelete,jdbcType=BIT},
      name = #{name,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      district = #{district,jdbcType=VARCHAR},
      block = #{block,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      is_new = #{isNew,jdbcType=BIT},
      is_decorating = #{isDecorating,jdbcType=BIT},
      decorating_start_at = #{decoratingStartAt,jdbcType=DATE},
      decorating_end_at = #{decoratingEndAt,jdbcType=DATE},
      floor_num = #{floorNum,jdbcType=SMALLINT},
      floor_room_num = #{floorRoomNum,jdbcType=SMALLINT},
      room_num = #{roomNum,jdbcType=SMALLINT},
      operator_id = #{operatorId,jdbcType=INTEGER},
      area = #{area,jdbcType=VARCHAR},
      latitude = #{latitude,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.web.business.model.volga.Apartment" >
    update apartment
    set created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      deleted_at = #{deletedAt,jdbcType=TIMESTAMP},
      created_by = #{createdBy,jdbcType=INTEGER},
      updated_by = #{updatedBy,jdbcType=INTEGER},
      deleted_by = #{deletedBy,jdbcType=INTEGER},
      version = #{version,jdbcType=INTEGER},
      is_delete = #{isDelete,jdbcType=BIT},
      name = #{name,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      district = #{district,jdbcType=VARCHAR},
      block = #{block,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      is_new = #{isNew,jdbcType=BIT},
      is_decorating = #{isDecorating,jdbcType=BIT},
      decorating_start_at = #{decoratingStartAt,jdbcType=DATE},
      decorating_end_at = #{decoratingEndAt,jdbcType=DATE},
      floor_num = #{floorNum,jdbcType=SMALLINT},
      floor_room_num = #{floorRoomNum,jdbcType=SMALLINT},
      room_num = #{roomNum,jdbcType=SMALLINT},
      operator_id = #{operatorId,jdbcType=INTEGER},
      area = #{area,jdbcType=VARCHAR},
      latitude = #{latitude,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>